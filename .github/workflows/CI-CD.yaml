name: CI/CD

on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**/README.md'
      - '**/CONTRIBUTING.md'
      - '**/CODE_OF_CONDUCT.md'
      - '.github/**'
      - 'docs/**'
      - '**/.editorconfig'
      - '**/.gitignore'
      - '**/LICENSE'
      - '**/CREDITS'
    
  workflow_dispatch:

jobs:
  test:
    if: github.actor != 'actions[bot]'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.head_ref }}

    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        # Gerar o arquivo .env
        echo "SERVER_URL=https://economia.awesomeapi.com.br" > .env
    
    - name: Run tests
      run: pytest

  build:
    needs: test
    if: github.actor != 'actions[bot]'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.head_ref }}

    - name: Build Docker Image using Dockerfile
      run: | 
        docker build -t etl-awesome-api .
    
    - name: Run Docker Image using Dockerfile
      run: | 
        docker run etl-awesome-api

    - name: Build Docker Image using Docker Compose
      run: | 
        docker-compose up --build -d

    - name: Run Docker image using Docker Compose
      run: | 
        docker run etl-awesome-api-compose

    - name: Run Application using Python Native
      run: | 
        python -m venv .venv
        source .venv/bin/activate
        .venv/bin/python -m pip install --upgrade pip
        echo "SERVER_URL=https://economia.awesomeapi.com.br" > .env
        pip install -e .
        python etl/main.py
    
    - name: Run Application using Poetry
      run: | 
        pip install poetry
        poetry install
        poetry run python etl/main.py
       
  deploy:
    needs: build
    if: github.actor != 'actions[bot]'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install Jupyter
        run: pip install notebook
  
      - name: Convert notebook to HTML
        run: |
          jupyter nbconvert --to html notebooks/data_explorer.ipynb --output-dir=docs --output=index
        
      - name: Setup Git
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
        
      - name: Commit and Push Notebook
        run: |
          git add docs/index.html
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Add generated HTML"
            git push
          fi

      # - name: Setup Pages
      #   if: github.ref == 'refs/heads/main'
      #   uses: actions/configure-pages@v5
        
      # - name: Upload artifact
      #   if: github.ref == 'refs/heads/main'
      #   uses: actions/upload-pages-artifact@v3
      #   with:
      #     path: './views/'